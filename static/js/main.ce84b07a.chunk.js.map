{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["MovieList","Component","constructor","props","super","this","state","movies","componentDidMount","fetchMovies","axios","get","then","response","setState","data","Search","catch","error","console","render","React","createElement","className","map","movie","key","imdbID","src","Poster","alt","Title","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode","App"],"mappings":"oMA+CeA,MA3Cf,cAAwBC,YACtBC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACXC,OAAQ,IAIZC,oBACEH,KAAKI,cAGPA,cACEC,IAAMC,IAAI,kDACPC,KAAKC,IACJR,KAAKS,SAAS,CACZP,OAAQM,EAASE,KAAKC,QAAU,OAGnCC,MAAMC,IACLC,QAAQD,MAAM,yBAA0BA,KAI9CE,SACE,OACEC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,yBACJD,IAAAC,cAAA,OAAKC,UAAU,cACZlB,KAAKC,MAAMC,OAAOiB,IAAIC,GACrBJ,IAAAC,cAAA,OAAKI,IAAKD,EAAME,OAAQJ,UAAU,cAChCF,IAAAC,cAAA,OAAKM,IAAKH,EAAMI,OAAQC,IAAKL,EAAMM,QACnCV,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,OAAKC,UAAU,eAAeE,EAAMM,cCzBrCC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAxB,KAAAuB,EAAAE,KAAA,UAAqBzB,KAAK0B,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpD3B,OACHC,IAAAC,cAACD,IAAM2B,WAAU,KACf3B,IAAAC,cAAC2B,EAAG,QAORjB","file":"static/js/main.ce84b07a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  fetchMovies() {\n    axios.get('https://www.omdbapi.com/?apikey=45f0782a&s=war')\n      .then(response => {\n        this.setState({\n          movies: response.data.Search || [],\n        });\n      })\n      .catch(error => {\n        console.error('Error fetching movies:', error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Movie Listing Website</h1>     \n        <div className=\"movie-list\">\n          {this.state.movies.map(movie => (\n            <div key={movie.imdbID} className=\"movie-card\">\n              <img src={movie.Poster} alt={movie.Title} />\n              <div className=\"overlay\">\n                <div className=\"movie-title\">{movie.Title}</div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}